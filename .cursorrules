# QTI Assessment System Project Structure

# This project consists of two main parts:

# 1. QTI API (OpenAPI/Swagger specification)

# 2. QTI AIPI (React+TypeScript frontend application)

# Core API Specification

qti-api.yaml {
description: "OpenAPI/Swagger specification for the QTI Assessment Engine API"
type: "api-spec"
importance: "high"
}

# Frontend Application (qti-aipi)

qti-aipi/ {
description: "React+TypeScript frontend application for QTI assessment authoring"
type: "frontend"
framework: "react"
language: "typescript"

# Core Application Files

src/ {
components/ {
description: "React components for the application"
qti-editor.tsx: "Main QTI assessment editor component"
}

    types/ {
      description: "TypeScript type definitions"
      index.ts: "Core QTI types and interfaces"
    }

    App.tsx: "Root application component"
    main.tsx: "Application entry point"

}

# Configuration Files

package.json: "Project dependencies and scripts"
tsconfig.json: "TypeScript configuration"
tsconfig.app.json: "App-specific TypeScript config"
tsconfig.node.json: "Node-specific TypeScript config"
vite.config.ts: "Vite bundler configuration"
}

# Project Context

context {
description: "QTI Assessment System"
purpose: "Create and manage educational assessments following QTI standards"
features: [
"Assessment authoring",
"Question management",
"Test assembly",
"QTI XML generation"
]
mainComponents: [
"REST API for assessment management",
"React-based assessment editor"
]
}

# Build Instructions

build {
api: "OpenAPI/Swagger specification - no build required"
frontend: {
install: "npm install"
dev: "npm run dev"
build: "npm run build"
lint: "npm run lint"
}
}

# Key Files for Development

important_files: [
"qti-api.yaml",
"qti-aipi/src/components/qti-editor.tsx",
"qti-aipi/src/types/index.ts",
"qti-aipi/src/App.tsx"
]

# Development Guidelines

guidelines {
api: [
"Follow OpenAPI 3.0.0 specification",
"Maintain RESTful principles",
"Include comprehensive documentation"
]
frontend: [
"Use TypeScript for type safety",
"Follow React best practices",
"Maintain component reusability",
"Ensure accessibility compliance"
]
}
